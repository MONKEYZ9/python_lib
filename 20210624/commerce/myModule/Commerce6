{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Commerce6","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z09srQMjHY7Y","executionInfo":{"status":"ok","timestamp":1624385444731,"user_tz":-540,"elapsed":382,"user":{"displayName":"콘테스트용","photoUrl":"","userId":"14838366091272991334"}},"outputId":"051438e0-b87c-42d3-ce55-5747d215bd7b"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"KCo28MXF8n37","executionInfo":{"status":"ok","timestamp":1624385492118,"user_tz":-540,"elapsed":17227,"user":{"displayName":"콘테스트용","photoUrl":"","userId":"14838366091272991334"}},"outputId":"c3f165e2-8bb9-47cd-ea4c-a7f1f53c865f"},"source":["# 로그인 / 회원 DB 처리\n","# 상품보기 / 상품결제\n","# 결제 처리 메일 보내기\n","\n","# login, product, purchase, share\n","import pandas as pd\n","import numpy as np\n","\n","# login\n","# product\n","# purchase\n","# share\n","import requests\n","import json\n","\n","\n","# 로그인 기능을 만들면, 쇼핑 기능과 연결할 뿐만 아니라 커뮤니케이션 기능을 만들 수도 있겠네요.\n","# 리뷰 게시판을 만들고 내가 글을 써볼 수도 있겠어요.\n","class Commerce6_login :\n","  \n","  def __init__(self, id, pw) :\n","    self.id = id\n","    self.pw = pw\n","\n","  def login_doit(self) :\n","    login_df = pd.read_csv(\"/content/drive/My Drive/lion/Commerce6/login/Commerce6_login.csv\")\n","    \n","    # Check Login\n","    if len(login_df.loc[(login_df['id'] == self.id) & (login_df['pw'] == self.pw)]) == 1 :\n","      return 'login_complete'\n","    else :\n","      return 'login_fail'\n","\n","  def login_guest(self) :\n","    login_df = pd.read_csv(\"/content/drive/My Drive/lion/Commerce6/login/Commerce6_login.csv\")\n","    \n","    info_table = ['id',\t'pw',\t'nickname',\t'location']\n","    return_table = []\n","\n","    for i in range( 4 ) : # id\tpw\tnickname\tlocation\n","      return_table.append( input(\"Enter Your Information [{}] : \".format(info_table[i])) )\n","    \n","    return_table_df = pd.DataFrame( np.array(return_table).reshape(1, -1), columns=info_table )\n","    \n","    login_df = login_df.append(return_table_df)\n","    login_df.to_csv(\"/content/drive/My Drive/lion/Commerce6/login/Commerce6_login.csv\", index = False)\n","\n","    return 'login_guest_complete'\n","\n","# 상품을 장르별로도 검색해볼 수는 없을까요?\n","# 단순히 구매하기 말고, csv 파일을 DB 처럼 활용하는 방법으로 장바구니도 구현할 수 있을것 같습니다.\n","class Commerce6_product :\n","  def __init__(self, id, pw) :\n","    self.id = id\n","    self.pw = pw\n","\n","  def product_infomation_resule(self) :\n","    login_df = pd.read_csv(\"/content/drive/My Drive/lion/Commerce6/login/Commerce6_login.csv\")\n","    product_df = pd.read_csv(\"/content/drive/My Drive/lion/Commerce6/product/bestsellers with categories.csv\")\n","\n","    while True :\n","      product_choice_options = int(input(\"평점높은순(1) / 리뷰많은순(2) / 낮은가격순(3) / 높은가격순(4) / 최신출시순(5): \"))\n","      \n","      if product_choice_options == 1 :\n","        product_df = product_df.sort_values(by=['User Rating'], axis=0, ascending=False)\n","      elif product_choice_options == 2 :\n","        product_df = product_df.sort_values(by=['Reviews'], axis=0, ascending=False)\n","      elif product_choice_options == 3 :\n","        product_df = product_df.sort_values(by=['Price'], axis=0, ascending=True)\n","      elif product_choice_options == 4 :\n","        product_df = product_df.sort_values(by=['Price'], axis=0, ascending=False)\n","      elif product_choice_options == 5 :\n","        product_df = product_df.sort_values(by=['Year'], axis=0, ascending=False)\n","\n","      for i in range( 5 ) :\n","        print( \"-------------------------------\" )\n","        print( \"-{} 번째 서적번호------------------\".format(i+1) )\n","        print( \"-------------------------------\" )\n","        for j in range( len(product_df.columns) ) :\n","          if j == 4 :\n","            print( \"{} : {} 원\".format(product_df.columns.to_list()[j], format(product_df.loc[i][j]*1000, \",\") ) )\n","          else :\n","            print( \"{} : {}\".format(product_df.columns.to_list()[j], product_df.loc[i][j]) )\n","        print( \"-------------------------------\" )\n","\n","      choice_product_booknumber = int(input(\"구매하실 서적 번호를 입력 : \"))\n","\n","      print( \"{} 님, 구매 신청하신 서적은 {} 입니다.\".format( login_df.loc[(login_df['id'] == self.id) & (login_df['pw'] == self.pw)]['nickname'].values[0], product_df.loc[choice_product_booknumber-1][0] ) )\n","      print( \"가격은 {} 원입니다.\".format( product_df.loc[choice_product_booknumber][4]*1000 ) )\n","      \n","      choice_product_bookorder = int(input(\"구매(1) / 비구매(2) : \"))\n","\n","      if choice_product_bookorder == 1 :\n","        print(\"결제처리 진행 중\")\n","        break\n","      elif choice_product_bookorder == 2 :\n","        print(\"다른 서적을 확인 중\")\n","        pass\n","  \n","    return 'product_choose_success'\n","\n","# 결제가 완료되었을 때, 디테일한 주문서를 작성할 수 있겠죠? 안전결제를 위해 조건문&반복문을 활용해 \n","# 자체적으로 보안문자기능을 만들고, Delivery 클래스를 새로 생성하여\n","# 영수증을 만들어 배송처리하는데 데이터를 넘겨주는 기능도 만들 수 있겠죠.\n","# class Commerce6_purchase :\n","\n","# 카카오톡 혹은 메일로 결제 내용을 보내줄 수도 있겠습니다.\n","# class Commerce6_share :\n","\n","\n","a = Commerce6_product(\"나호용\", 3456)\n","a.product_infomation_resule()\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["평점높은순(1) / 리뷰많은순(2) / 낮은가격순(3) / 높은가격순(4) / 최신출시순(5): 3\n","-------------------------------\n","-1 번째 서적번호------------------\n","-------------------------------\n","Name : 10-Day Green Smoothie Cleanse\n","Author : JJ Smith\n","User Rating : 4.7\n","Reviews : 17350\n","Price : 8,000 원\n","Year : 2016\n","Genre : Non Fiction\n","-------------------------------\n","-------------------------------\n","-2 번째 서적번호------------------\n","-------------------------------\n","Name : 11/22/63: A Novel\n","Author : Stephen King\n","User Rating : 4.6\n","Reviews : 2052\n","Price : 22,000 원\n","Year : 2011\n","Genre : Fiction\n","-------------------------------\n","-------------------------------\n","-3 번째 서적번호------------------\n","-------------------------------\n","Name : 12 Rules for Life: An Antidote to Chaos\n","Author : Jordan B. Peterson\n","User Rating : 4.7\n","Reviews : 18979\n","Price : 15,000 원\n","Year : 2018\n","Genre : Non Fiction\n","-------------------------------\n","-------------------------------\n","-4 번째 서적번호------------------\n","-------------------------------\n","Name : 1984 (Signet Classics)\n","Author : George Orwell\n","User Rating : 4.7\n","Reviews : 21424\n","Price : 6,000 원\n","Year : 2017\n","Genre : Fiction\n","-------------------------------\n","-------------------------------\n","-5 번째 서적번호------------------\n","-------------------------------\n","Name : 5,000 Awesome Facts (About Everything!) (National Geographic Kids)\n","Author : National Geographic Kids\n","User Rating : 4.8\n","Reviews : 7665\n","Price : 12,000 원\n","Year : 2019\n","Genre : Non Fiction\n","-------------------------------\n","구매하실 서적 번호를 입력 : 4\n","여름바다 님, 구매 신청하신 서적은 1984 (Signet Classics) 입니다.\n","가격은 12000 원입니다.\n","구매(1) / 비구매(2) : 2\n","다른 서적을 확인 중\n","평점높은순(1) / 리뷰많은순(2) / 낮은가격순(3) / 높은가격순(4) / 최신출시순(5): 2\n","-------------------------------\n","-1 번째 서적번호------------------\n","-------------------------------\n","Name : 10-Day Green Smoothie Cleanse\n","Author : JJ Smith\n","User Rating : 4.7\n","Reviews : 17350\n","Price : 8,000 원\n","Year : 2016\n","Genre : Non Fiction\n","-------------------------------\n","-------------------------------\n","-2 번째 서적번호------------------\n","-------------------------------\n","Name : 11/22/63: A Novel\n","Author : Stephen King\n","User Rating : 4.6\n","Reviews : 2052\n","Price : 22,000 원\n","Year : 2011\n","Genre : Fiction\n","-------------------------------\n","-------------------------------\n","-3 번째 서적번호------------------\n","-------------------------------\n","Name : 12 Rules for Life: An Antidote to Chaos\n","Author : Jordan B. Peterson\n","User Rating : 4.7\n","Reviews : 18979\n","Price : 15,000 원\n","Year : 2018\n","Genre : Non Fiction\n","-------------------------------\n","-------------------------------\n","-4 번째 서적번호------------------\n","-------------------------------\n","Name : 1984 (Signet Classics)\n","Author : George Orwell\n","User Rating : 4.7\n","Reviews : 21424\n","Price : 6,000 원\n","Year : 2017\n","Genre : Fiction\n","-------------------------------\n","-------------------------------\n","-5 번째 서적번호------------------\n","-------------------------------\n","Name : 5,000 Awesome Facts (About Everything!) (National Geographic Kids)\n","Author : National Geographic Kids\n","User Rating : 4.8\n","Reviews : 7665\n","Price : 12,000 원\n","Year : 2019\n","Genre : Non Fiction\n","-------------------------------\n","구매하실 서적 번호를 입력 : 2\n","여름바다 님, 구매 신청하신 서적은 11/22/63: A Novel 입니다.\n","가격은 15000 원입니다.\n","구매(1) / 비구매(2) : 1\n","결제처리 진행 중\n"],"name":"stdout"},{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'product_choose_success'"]},"metadata":{"tags":[]},"execution_count":274}]}]}